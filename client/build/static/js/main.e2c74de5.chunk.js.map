{"version":3,"sources":["utils/helpers.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","reducer","state","action","type","products","cartOpen","cart","product","map","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","ProductItem","item","image","price","quantity","theme","createTheme","spacing","palette","primary","main","contrastText","secondary","className","to","alt","src","ThemeProvider","IconButton","style","border","sx","mr","variant","color","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","QUERY_CATEGORIES","QUERY_USER","GET_PRODUCTS","QUERY_CHECKOUT","SampleNextArrow","display","SamplePrevArrow","ProductList","useQuery","loading","data","settings","dots","infinite","slidesToShow","slidesToScroll","nextArrow","prevArrow","responsive","breakpoint","useEffect","forEach","then","category","spinner","CategoryMenu","categoryData","id","CartItem","placeholder","onChange","target","role","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","Detail","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","Grid","container","xs","description","disabled","p","Jumbotron","children","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_USER","ADD_ORDER","Login","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e2c74de5.chunk.js","sourcesContent":["export function pluralize(name, count) {\r\n  if (count === 1) {\r\n    return name;\r\n  }\r\n  return name + 's';\r\n}\r\n\r\nexport function idbPromise(storeName, method, object) {\r\n  return new Promise((resolve, reject) => {\r\n    const request = window.indexedDB.open('shop-shop', 1);\r\n    let db, tx, store;\r\n    request.onupgradeneeded = function(e) {\r\n      const db = request.result;\r\n      db.createObjectStore('products', { keyPath: '_id' });\r\n      db.createObjectStore('categories', { keyPath: '_id' });\r\n      db.createObjectStore('cart', { keyPath: '_id' });\r\n    };\r\n\r\n    request.onerror = function(e) {\r\n      console.log('There was an error');\r\n    };\r\n\r\n    request.onsuccess = function(e) {\r\n      db = request.result;\r\n      tx = db.transaction(storeName, 'readwrite');\r\n      store = tx.objectStore(storeName);\r\n\r\n      db.onerror = function(e) {\r\n        console.log('error', e);\r\n      };\r\n\r\n      switch (method) {\r\n        case 'put':\r\n          store.put(object);\r\n          resolve(object);\r\n          break;\r\n        case 'get':\r\n          const all = store.getAll();\r\n          all.onsuccess = function() {\r\n            resolve(all.result);\r\n          };\r\n          break;\r\n        case 'delete':\r\n          store.delete(object._id);\r\n          break;\r\n        default:\r\n          console.log('No valid method');\r\n          break;\r\n      }\r\n\r\n      tx.oncomplete = function() {\r\n        db.close();\r\n      };\r\n    };\r\n  });\r\n}\r\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\r\n\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\r\nexport const TOGGLE_CART = \"TOGGLE_CART\";\r\n\r\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\r\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\r\n","import { useReducer } from \"react\";\r\nimport {\r\n  UPDATE_PRODUCTS,\r\n  ADD_TO_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  REMOVE_FROM_CART,\r\n  ADD_MULTIPLE_TO_CART,\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n  CLEAR_CART,\r\n  TOGGLE_CART\r\n} from \"./actions\";\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        products: [...action.products],\r\n      };\r\n\r\n    case ADD_TO_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: [...state.cart, action.product],\r\n      };\r\n\r\n    case ADD_MULTIPLE_TO_CART:\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, ...action.products],\r\n      };\r\n\r\n    case UPDATE_CART_QUANTITY:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: state.cart.map(product => {\r\n          if (action._id === product._id) {\r\n            product.purchaseQuantity = action.purchaseQuantity\r\n          }\r\n          return product\r\n        })\r\n      };\r\n\r\n    case REMOVE_FROM_CART:\r\n      let newState = state.cart.filter(product => {\r\n        return product._id !== action._id;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        cartOpen: newState.length > 0,\r\n        cart: newState\r\n      };\r\n\r\n    case CLEAR_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: false,\r\n        cart: []\r\n      };\r\n\r\n    case TOGGLE_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: !state.cartOpen\r\n      };\r\n\r\n    case UPDATE_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        categories: [...action.categories],\r\n      };\r\n\r\n    case UPDATE_CURRENT_CATEGORY:\r\n      return {\r\n        ...state,\r\n        currentCategory: action.currentCategory\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function useProductReducer(initialState) {\r\n  return useReducer(reducer, initialState)\r\n}","import React, { createContext, useContext } from \"react\";\r\nimport { useProductReducer } from './reducers'\r\n\r\nconst StoreContext = createContext();\r\nconst { Provider } = StoreContext;\r\n\r\nconst StoreProvider = ({ value = [], ...props }) => {\r\n  const [state, dispatch] = useProductReducer({\r\n    products: [],\r\n    cart: [],\r\n    cartOpen: false,\r\n    categories: [],\r\n    currentCategory: '',\r\n  });\r\n\r\n  return <Provider value={[state, dispatch]} {...props} />;\r\n};\r\n\r\nconst useStoreContext = () => {\r\n  return useContext(StoreContext);\r\n};\r\n\r\nexport { StoreProvider, useStoreContext };\r\n","import * as React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { pluralize } from \"../../utils/helpers\"\r\nimport { useStoreContext } from \"../../utils/GlobalState\";\r\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\n\r\nimport AddShoppingCartIcon from '@mui/icons-material/AddShoppingCart';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nfunction ProductItem(item) {\r\n  const [state, dispatch] = useStoreContext();\r\n\r\n  const {\r\n    image,\r\n    name,\r\n    _id,\r\n    price,\r\n    quantity\r\n  } = item;\r\n\r\n  const { cart } = state\r\n\r\n  const addToCart = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: _id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n      });\r\n      idbPromise('cart', 'put', {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        product: { ...item, purchaseQuantity: 1 }\r\n      });\r\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\r\n    }\r\n  }\r\n\r\n  const theme = createTheme({\r\n    spacing: 5,\r\n    palette: {\r\n      primary: {\r\n        main: '#44AF69',\r\n        contrastText: '#fff',\r\n      },\r\n      secondary: {\r\n        main: '#7D451B',\r\n        contrastText: '#fff',\r\n      },\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"card px-1 py-1\">\r\n      <Link to={`/products/${_id}`}>\r\n        <img\r\n          alt={name}\r\n          src={`/images/${image}`}\r\n          className=\"product-list-image\"\r\n        />\r\n      </Link>\r\n      <div className='pCard-info'>\r\n        <Link to={`/products/${_id}`}>\r\n          <h4>{name}</h4>\r\n        </Link>\r\n        <div className='pCard-info-add'>\r\n          <ThemeProvider theme={theme}>\r\n          <IconButton style={{border: \"3px solid\"}} sx={{ mr: 2 }} variant=\"outlined\" color=\"primary\" onClick={addToCart} aria-label=\"add to shopping cart\">\r\n            <AddShoppingCartIcon />\r\n          </IconButton>\r\n          </ThemeProvider>\r\n          <div>\r\n            <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\r\n            <span>${price}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductItem;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const QUERY_PRODUCTS = gql`\r\n  query getProducts($category: ID) {\r\n    products(category: $category) {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      image\r\n      category {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_ALL_PRODUCTS = gql`\r\n  {\r\n    products {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      category {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CATEGORIES = gql`\r\n  {\r\n    categories {\r\n      _id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_USER = gql`\r\n  {\r\n    user {\r\n      firstName\r\n      lastName\r\n      orders {\r\n        _id\r\n        purchaseDate\r\n        products {\r\n          _id\r\n          name\r\n          description\r\n          price\r\n          quantity\r\n          image\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// START OF OUR QUERIES\r\nexport const GET_ME = gql`\r\n  {\r\n    token\r\n    me {\r\n      firstName\r\n      lastName\r\n      email\r\n      createdAt\r\n      orders {\r\n        purchaseDate\r\n        products {\r\n          name\r\n          description\r\n          price\r\n          image\r\n          category {\r\n            name\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_PRODUCTS = gql`\r\n  query products($category: String) {\r\n    products(category: $category) {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      image\r\n      quantity\r\n      category {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_PRODUCT = gql`\r\n  query product($_id: ID!) {\r\n    product(_id: $_id) {\r\n      name\r\n      description\r\n      price\r\n      image\r\n      quantity\r\n      category {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_CATEGORIES = gql`\r\n  {\r\n    categories {\r\n      _id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ORDER = gql`\r\n  query order($_id: ID!) {\r\n    order(_id: $_id) {\r\n      purchaseDate\r\n      products {\r\n        name\r\n        description\r\n        price\r\n        image\r\n        quantity\r\n        category {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ORDERS = gql`\r\n  {\r\n    orders {\r\n      purchaseDate\r\n      products {\r\n        name\r\n        description\r\n        price\r\n        image\r\n        quantity\r\n        category {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CHECKOUT = gql`\r\n  query checkout($products: [ID]!) {\r\n    checkout(products: $products) {\r\n      session\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_CHECKOUT = gql`\r\n  query checkout($products: [ID]!) {\r\n    checkout(products: $products) {\r\n      session\r\n    }\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/spinner.1591e727.gif\";","import React, { useEffect } from 'react';\r\nimport ProductItem from '../ProductItem';\r\nimport { useStoreContext } from '../../utils/GlobalState';\r\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_PRODUCTS } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\nimport spinner from '../../assets/spinner.gif';\r\n\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\n\r\nimport Slider from \"react-slick\";\r\n\r\nfunction SampleNextArrow(props) {\r\n  const { className, style, onClick } = props;\r\n  return (\r\n      <NavigateNextIcon className={className}\r\n      style={{ ...style, display: \"block\"}}\r\n      onClick={onClick}/>\r\n  );\r\n}\r\n\r\nfunction SamplePrevArrow(props) {\r\n  const { className, style, onClick } = props;\r\n  return (\r\n    <NavigateBeforeIcon className={className}\r\n      style={{ ...style, display: \"block\"}}\r\n      onClick={onClick}/>\r\n  );\r\n}\r\n\r\nfunction ProductList() {\r\n\r\n  const [state, dispatch] = useStoreContext();\r\n\r\n  const { currentCategory } = state;\r\n\r\n  const { loading, data } = useQuery(GET_PRODUCTS);\r\n\r\n  const settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 4,\r\n    nextArrow: <SampleNextArrow />,\r\n    prevArrow: <SamplePrevArrow />,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 3,\r\n          slidesToScroll: 3\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 2\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1\r\n        }\r\n      }\r\n    ]\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products,\r\n      });\r\n      data.products.forEach((product) => {\r\n        idbPromise('products', 'put', product);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise('products', 'get').then((products) => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n          products: products,\r\n        });\r\n      });\r\n    }\r\n  }, [data, loading, dispatch]);\r\n\r\n  function filterProducts() {\r\n    if (!currentCategory) {\r\n      return state.products;\r\n    }\r\n\r\n    return state.products.filter(\r\n      (product) => product.category._id === currentCategory\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"my-5\">\r\n      {state.products.length ? (\r\n        <Slider {...settings}>\r\n          {filterProducts().map((product) => (\r\n            <ProductItem\r\n              key={product._id}\r\n              _id={product._id}\r\n              image={product.image}\r\n              name={product.name}\r\n              price={product.price}\r\n              quantity={product.quantity}\r\n            />\r\n          ))}\r\n        </Slider>\r\n      ) : (\r\n        <div className='text-center'>\r\n          <h3>You haven't added any products yet!</h3>\r\n        </div>\r\n      )}\r\n      {loading ? <div className='text-center'>\r\n        <img src={spinner} alt=\"loading\" />\r\n      </div> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n","import React, { useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { useStoreContext } from \"../../utils/GlobalState\";\r\nimport {\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n} from \"../../utils/actions\";\r\nimport { QUERY_CATEGORIES } from \"../../utils/queries\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\n\r\nfunction CategoryMenu() {\r\n  const [state, dispatch] = useStoreContext();\r\n\r\n  const { categories } = state;\r\n\r\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\r\n\r\n  useEffect(() => {\r\n    if (categoryData) {\r\n      dispatch({\r\n        type: UPDATE_CATEGORIES,\r\n        categories: categoryData.categories,\r\n      });\r\n      categoryData.categories.forEach((category) => {\r\n        idbPromise(\"categories\", \"put\", category);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise(\"categories\", \"get\").then((categories) => {\r\n        dispatch({\r\n          type: UPDATE_CATEGORIES,\r\n          categories: categories,\r\n        });\r\n      });\r\n    }\r\n  }, [categoryData, loading, dispatch]);\r\n\r\n  const handleClick = (id) => {\r\n    dispatch({\r\n      type: UPDATE_CURRENT_CATEGORY,\r\n      currentCategory: id,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"sections\">\r\n      {categories.map((item) => (\r\n        <button\r\n          className=\"labels\"\r\n          key={item._id}\r\n          onClick={() => {\r\n            handleClick(item._id);\r\n          }}\r\n        >\r\n          {item.name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryMenu;\r\n","import React from 'react';\r\nimport { useStoreContext } from \"../../utils/GlobalState\";\r\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\n\r\nconst CartItem = ({ item }) => {\r\n\r\n  const [, dispatch] = useStoreContext();\r\n\r\n  const removeFromCart = item => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: item._id\r\n    });\r\n    idbPromise('cart', 'delete', { ...item });\r\n\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value === '0') {\r\n      dispatch({\r\n        type: REMOVE_FROM_CART,\r\n        _id: item._id\r\n      });\r\n      idbPromise('cart', 'delete', { ...item });\r\n\r\n    } else {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: item._id,\r\n        purchaseQuantity: parseInt(value)\r\n      });\r\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex-row\">\r\n      <div>\r\n        <img\r\n          src={`/images/${item.image}`}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <div>{item.name}, ${item.price}</div>\r\n        <div>\r\n          <span>Qty:</span>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"1\"\r\n            value={item.purchaseQuantity}\r\n            onChange={onChange}\r\n          />\r\n          <span\r\n            role=\"img\"\r\n            aria-label=\"trash\"\r\n            onClick={() => removeFromCart(item)}\r\n          >\r\n            🗑️\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartItem;","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token);\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { useEffect } from 'react';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport { QUERY_CHECKOUT } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\nimport CartItem from '../CartItem';\r\nimport Auth from '../../utils/auth';\r\nimport { useStoreContext } from '../../utils/GlobalState';\r\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\r\nimport './style.css';\r\n\r\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\r\n\r\nconst Cart = () => {\r\n  const [state, dispatch] = useStoreContext();\r\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      stripePromise.then((res) => {\r\n        res.redirectToCheckout({ sessionId: data.checkout.session });\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    async function getCart() {\r\n      const cart = await idbPromise('cart', 'get');\r\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\r\n    }\r\n\r\n    if (!state.cart.length) {\r\n      getCart();\r\n    }\r\n  }, [state.cart.length, dispatch]);\r\n\r\n  function toggleCart() {\r\n    dispatch({ type: TOGGLE_CART });\r\n  }\r\n\r\n  function calculateTotal() {\r\n    let sum = 0;\r\n    state.cart.forEach((item) => {\r\n      sum += item.price * item.purchaseQuantity;\r\n    });\r\n    return sum.toFixed(2);\r\n  }\r\n\r\n  function submitCheckout() {\r\n    const productIds = [];\r\n\r\n    state.cart.forEach((item) => {\r\n      for (let i = 0; i < item.purchaseQuantity; i++) {\r\n        productIds.push(item._id);\r\n      }\r\n    });\r\n\r\n    getCheckout({\r\n      variables: { products: productIds },\r\n    });\r\n  }\r\n\r\n  if (!state.cartOpen) {\r\n    return (\r\n      <div className=\"cart-closed\" onClick={toggleCart}>\r\n        <span role=\"img\" aria-label=\"trash\">\r\n          🛒\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n      <div className=\"close\" onClick={toggleCart}>\r\n        [close]\r\n      </div>\r\n      <h2>Shopping Cart</h2>\r\n      {state.cart.length ? (\r\n        <div>\r\n          {state.cart.map((item) => (\r\n            <CartItem key={item._id} item={item} />\r\n          ))}\r\n\r\n          <div className=\"flex-row space-between\">\r\n            <strong>Total: ${calculateTotal()}</strong>\r\n\r\n            {Auth.loggedIn() ? (\r\n              <button onClick={submitCheckout}>Checkout</button>\r\n            ) : (\r\n              <span>(log in to check out)</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h3>\r\n          <span role=\"img\" aria-label=\"shocked\">\r\n            😱\r\n          </span>\r\n          You haven't added anything to your cart yet!\r\n        </h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Cart;\r\n","import React from \"react\";\r\nimport ProductList from \"../components/ProductList\";\r\nimport CategoryMenu from \"../components/CategoryMenu\";\r\nimport Cart from \"../components/Cart\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <CategoryMenu />\r\n      </div>\r\n      <div className=\"container\">\r\n        <ProductList />\r\n        <Cart />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","import React, { useEffect, useState } from 'react';\r\nimport AddShoppingCartIcon from '@mui/icons-material/AddShoppingCart';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport Cart from '../components/Cart';\r\nimport { useStoreContext } from '../utils/GlobalState';\r\nimport {\r\n  REMOVE_FROM_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  ADD_TO_CART,\r\n  UPDATE_PRODUCTS,\r\n} from '../utils/actions';\r\nimport { QUERY_PRODUCTS } from '../utils/queries';\r\nimport { idbPromise } from '../utils/helpers';\r\nimport spinner from '../assets/spinner.gif';\r\n\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nfunction Detail() {\r\n  const [state, dispatch] = useStoreContext();\r\n  const { id } = useParams();\r\n\r\n  const [currentProduct, setCurrentProduct] = useState({});\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  const { products, cart } = state;\r\n\r\n  useEffect(() => {\r\n    if (products.length) {\r\n      setCurrentProduct(products.find((product) => product._id === id));\r\n    }\r\n    else if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products,\r\n      });\r\n\r\n      data.products.forEach((product) => {\r\n        idbPromise('products', 'put', product);\r\n      });\r\n    }\r\n    else if (!loading) {\r\n      idbPromise('products', 'get').then((indexedProducts) => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n          products: indexedProducts,\r\n        });\r\n      });\r\n    }\r\n  }, [products, data, loading, dispatch, id]);\r\n\r\n  const theme = createTheme({\r\n    spacing: 5,\r\n    palette: {\r\n      primary: {\r\n        main: '#44AF69',\r\n        contrastText: '#fff',\r\n      },\r\n      secondary: {\r\n        main: '#7D451B',\r\n        contrastText: '#fff',\r\n      },\r\n    }\r\n  });\r\n\r\n  const addToCart = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n      idbPromise('cart', 'put', {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        product: { ...currentProduct, purchaseQuantity: 1 },\r\n      });\r\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\r\n    }\r\n  };\r\n\r\n  const removeFromCart = () => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: currentProduct._id,\r\n    });\r\n\r\n    idbPromise('cart', 'delete', { ...currentProduct });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {currentProduct && cart ? (\r\n        <div className=\"container my-2\">\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <img\r\n                src={`/images/${currentProduct.image}`}\r\n                alt={currentProduct.name}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <h2>{currentProduct.name}</h2>\r\n              <p>{currentProduct.description}</p>\r\n              <p>\r\n                <strong>Price:</strong>${currentProduct.price}{' '}\r\n              </p>\r\n              <p>\r\n                <ThemeProvider theme={theme}>\r\n                <IconButton color=\"primary\" sx={{ mr: 2 }} onClick={addToCart} aria-label=\"add to shopping cart\">\r\n                  <AddShoppingCartIcon />\r\n                </IconButton>\r\n\r\n                <IconButton color=\"secondary\" disabled={!cart.find((p) => p._id === currentProduct._id)}\r\n                    onClick={removeFromCart} aria-label=\"delete\">\r\n                  <DeleteIcon />\r\n                </IconButton>              \r\n                </ThemeProvider>\r\n              </p>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      ) : null}\r\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\r\n      <Cart />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Detail;\r\n","import React from \"react\";\r\n\r\nfunction Jumbotron({ children }) {\r\n  return (\r\n    <div\r\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\nconst NoMatch = () => {\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h1>404 Page Not Found</h1>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoMatch;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        email\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $password: String!\r\n  ) {\r\n    addUser(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      password: $password\r\n    ) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_ORDER = gql`\r\n  mutation addOrder($products: [ID]!) {\r\n    addOrder(products: $products) {\r\n      purchaseDate\r\n      products {\r\n        _id\r\n        name\r\n        description\r\n        price\r\n        quantity\r\n        category {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { Link } from 'react-router-dom';\r\nimport { LOGIN } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nfunction Login(props) {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [login, { error }] = useMutation(LOGIN);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const mutationResponse = await login({\r\n        variables: { email: formState.email, password: formState.password },\r\n      });\r\n      const token = mutationResponse.data.login.token;\r\n      Auth.login(token);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      <Link to=\"/signup\">← Go to Signup</Link>\r\n\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"email\">Email address:</label>\r\n          <input\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        {error ? (\r\n          <div>\r\n            <p className=\"error-text\">The provided credentials are incorrect</p>\r\n          </div>\r\n        ) : null}\r\n        <div className=\"flex-row flex-end\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport Auth from '../utils/auth';\r\nimport { ADD_USER } from '../utils/mutations';\r\n\r\nfunction Signup(props) {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [addUser] = useMutation(ADD_USER);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const mutationResponse = await addUser({\r\n      variables: {\r\n        email: formState.email,\r\n        password: formState.password,\r\n        firstName: formState.firstName,\r\n        lastName: formState.lastName,\r\n      },\r\n    });\r\n    const token = mutationResponse.data.addUser.token;\r\n    Auth.login(token);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      <Link to=\"/login\">← Go to Login</Link>\r\n\r\n      <h2>Signup</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"firstName\">First Name:</label>\r\n          <input\r\n            placeholder=\"First\"\r\n            name=\"firstName\"\r\n            type=\"firstName\"\r\n            id=\"firstName\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"lastName\">Last Name:</label>\r\n          <input\r\n            placeholder=\"Last\"\r\n            name=\"lastName\"\r\n            type=\"lastName\"\r\n            id=\"lastName\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row flex-end\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport Auth from \"../../utils/auth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n\r\n  function showNavigation() {\r\n    if (Auth.loggedIn()) {\r\n      return (\r\n        <ul className=\"flex-row\">\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/orderHistory\">\r\n              Order History\r\n            </Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\r\n            <a href=\"/\" onClick={() => Auth.logout()}>\r\n              Logout\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      );\r\n    } else {\r\n      return (\r\n        <ul className=\"flex-row\">\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/signup\">\r\n              Signup\r\n            </Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <header className=\"flex-row\">\r\n      <div className=\"mainlinks px-1\">\r\n      <h1 className=\"brand\">\r\n        <Link to=\"/\">\r\n          VEGEMART\r\n        </Link>\r\n      </h1>\r\n\r\n      <nav>\r\n        {showNavigation()}\r\n      </nav>\r\n      </div>\r\n\r\n      {/* <div className=\"sections\">\r\n        <ul className=\"labels\">\r\n          <il>\r\n            <Link to=\"/freshproduce\">\r\n              fresh produce\r\n            </Link>\r\n          </il>\r\n          <il>\r\n            <Link to=\"/grains\">\r\n              grains & legumes\r\n            </Link>\r\n          </il>\r\n          <il>\r\n            <Link to=\"/dairy\">\r\n              dairy alternatives\r\n            </Link>\r\n          </il>\r\n          <il>\r\n            <Link to=\"/meat\">\r\n              meat alternatives\r\n            </Link>\r\n          </il>\r\n        </ul>\r\n      </div> */}\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useEffect } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport Jumbotron from '../components/Jumbotron';\r\nimport { ADD_ORDER } from '../utils/mutations';\r\nimport { idbPromise } from '../utils/helpers';\r\n\r\nfunction Success() {\r\n  const [addOrder] = useMutation(ADD_ORDER);\r\n\r\n  useEffect(() => {\r\n    async function saveOrder() {\r\n      const cart = await idbPromise('cart', 'get');\r\n      const products = cart.map((item) => item._id);\r\n\r\n      if (products.length) {\r\n        const { data } = await addOrder({ variables: { products } });\r\n        const productData = data.addOrder.products;\r\n\r\n        productData.forEach((item) => {\r\n          idbPromise('cart', 'delete', item);\r\n        });\r\n      }\r\n\r\n      setTimeout(() => {\r\n        window.location.assign('/');\r\n      }, 3000);\r\n    }\r\n\r\n    saveOrder();\r\n  }, [addOrder]);\r\n\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h1>Success!</h1>\r\n        <h2>Thank you for your purchase!</h2>\r\n        <h2>You will now be redirected to the home page</h2>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Success;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_USER } from '../utils/queries';\r\n\r\nfunction OrderHistory() {\r\n  const { data } = useQuery(QUERY_USER);\r\n  let user;\r\n\r\n  if (data) {\r\n    user = data.user;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container my-1\">\r\n        <Link to=\"/\">← Back to Products</Link>\r\n\r\n        {user ? (\r\n          <>\r\n            <h2>\r\n              Order History for {user.firstName} {user.lastName}\r\n            </h2>\r\n            {user.orders.map((order) => (\r\n              <div key={order._id} className=\"my-2\">\r\n                <h3>\r\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\r\n                </h3>\r\n                <div className=\"flex-row\">\r\n                  {order.products.map(({ _id, image, name, price }, index) => (\r\n                    <div key={index} className=\"card px-1 py-1\">\r\n                      <Link to={`/products/${_id}`}>\r\n                        <img alt={name} src={`/images/${image}`} />\r\n                        <p>{name}</p>\r\n                      </Link>\r\n                      <div>\r\n                        <span>${price}</span>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderHistory;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\nimport Home from './pages/Home';\r\nimport Detail from './pages/Detail';\r\nimport NoMatch from './pages/NoMatch';\r\nimport Login from './pages/Login';\r\nimport Signup from './pages/Signup';\r\nimport Nav from './components/Nav';\r\nimport { StoreProvider } from './utils/GlobalState';\r\nimport Success from './pages/Success';\r\nimport OrderHistory from './pages/OrderHistory';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem('id_token');\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div>\r\n          <StoreProvider>\r\n            <Nav />\r\n            <Routes>\r\n              <Route \r\n                path=\"/\" \r\n                element={<Home />} \r\n              />\r\n              <Route \r\n                path=\"/login\" \r\n                element={<Login />} \r\n              />\r\n              <Route \r\n                path=\"/signup\" \r\n                element={<Signup />} \r\n              />\r\n              <Route \r\n                path=\"/success\" \r\n                element={<Success />} \r\n              />\r\n              <Route \r\n                path=\"/orderHistory\" \r\n                element={<OrderHistory />} \r\n              />\r\n              <Route \r\n                path=\"/products/:id\" \r\n                element={<Detail />} \r\n              />\r\n              <Route \r\n                path=\"*\" \r\n                element={<NoMatch />} \r\n              />\r\n            </Routes>\r\n          </StoreProvider>\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (\r\n      process.env.NODE_ENV === 'production' &&\r\n      'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n  \r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }\r\n  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();"],"sourceRoot":""}